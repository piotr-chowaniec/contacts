/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ContactsImport } from './routes/contacts'
import { Route as IndexImport } from './routes/index'
import { Route as ContactsIndexImport } from './routes/contacts.index'
import { Route as ContactsNewImport } from './routes/contacts.new'
import { Route as ContactsContactIdImport } from './routes/contacts.$contactId'
import { Route as AuthLoginImport } from './routes/_auth.login'
import { Route as ContactsContactIdEditImport } from './routes/contacts.$contactId_.edit'

// Create/Update Routes

const ContactsRoute = ContactsImport.update({
  id: '/contacts',
  path: '/contacts',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ContactsIndexRoute = ContactsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ContactsRoute,
} as any)

const ContactsNewRoute = ContactsNewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => ContactsRoute,
} as any)

const ContactsContactIdRoute = ContactsContactIdImport.update({
  id: '/$contactId',
  path: '/$contactId',
  getParentRoute: () => ContactsRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ContactsContactIdEditRoute = ContactsContactIdEditImport.update({
  id: '/$contactId_/edit',
  path: '/$contactId/edit',
  getParentRoute: () => ContactsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/contacts': {
      id: '/contacts'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof ContactsImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/contacts/$contactId': {
      id: '/contacts/$contactId'
      path: '/$contactId'
      fullPath: '/contacts/$contactId'
      preLoaderRoute: typeof ContactsContactIdImport
      parentRoute: typeof ContactsImport
    }
    '/contacts/new': {
      id: '/contacts/new'
      path: '/new'
      fullPath: '/contacts/new'
      preLoaderRoute: typeof ContactsNewImport
      parentRoute: typeof ContactsImport
    }
    '/contacts/': {
      id: '/contacts/'
      path: '/'
      fullPath: '/contacts/'
      preLoaderRoute: typeof ContactsIndexImport
      parentRoute: typeof ContactsImport
    }
    '/contacts/$contactId_/edit': {
      id: '/contacts/$contactId_/edit'
      path: '/$contactId/edit'
      fullPath: '/contacts/$contactId/edit'
      preLoaderRoute: typeof ContactsContactIdEditImport
      parentRoute: typeof ContactsImport
    }
  }
}

// Create and export the route tree

interface ContactsRouteChildren {
  ContactsContactIdRoute: typeof ContactsContactIdRoute
  ContactsNewRoute: typeof ContactsNewRoute
  ContactsIndexRoute: typeof ContactsIndexRoute
  ContactsContactIdEditRoute: typeof ContactsContactIdEditRoute
}

const ContactsRouteChildren: ContactsRouteChildren = {
  ContactsContactIdRoute: ContactsContactIdRoute,
  ContactsNewRoute: ContactsNewRoute,
  ContactsIndexRoute: ContactsIndexRoute,
  ContactsContactIdEditRoute: ContactsContactIdEditRoute,
}

const ContactsRouteWithChildren = ContactsRoute._addFileChildren(
  ContactsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/contacts': typeof ContactsRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/contacts/$contactId': typeof ContactsContactIdRoute
  '/contacts/new': typeof ContactsNewRoute
  '/contacts/': typeof ContactsIndexRoute
  '/contacts/$contactId/edit': typeof ContactsContactIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/contacts/$contactId': typeof ContactsContactIdRoute
  '/contacts/new': typeof ContactsNewRoute
  '/contacts': typeof ContactsIndexRoute
  '/contacts/$contactId/edit': typeof ContactsContactIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/contacts': typeof ContactsRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/contacts/$contactId': typeof ContactsContactIdRoute
  '/contacts/new': typeof ContactsNewRoute
  '/contacts/': typeof ContactsIndexRoute
  '/contacts/$contactId_/edit': typeof ContactsContactIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/contacts'
    | '/login'
    | '/contacts/$contactId'
    | '/contacts/new'
    | '/contacts/'
    | '/contacts/$contactId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/contacts/$contactId'
    | '/contacts/new'
    | '/contacts'
    | '/contacts/$contactId/edit'
  id:
    | '__root__'
    | '/'
    | '/contacts'
    | '/_auth/login'
    | '/contacts/$contactId'
    | '/contacts/new'
    | '/contacts/'
    | '/contacts/$contactId_/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ContactsRoute: typeof ContactsRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ContactsRoute: ContactsRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/contacts",
        "/_auth/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/contacts": {
      "filePath": "contacts.tsx",
      "children": [
        "/contacts/$contactId",
        "/contacts/new",
        "/contacts/",
        "/contacts/$contactId_/edit"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth.login.tsx"
    },
    "/contacts/$contactId": {
      "filePath": "contacts.$contactId.tsx",
      "parent": "/contacts"
    },
    "/contacts/new": {
      "filePath": "contacts.new.tsx",
      "parent": "/contacts"
    },
    "/contacts/": {
      "filePath": "contacts.index.tsx",
      "parent": "/contacts"
    },
    "/contacts/$contactId_/edit": {
      "filePath": "contacts.$contactId_.edit.tsx",
      "parent": "/contacts"
    }
  }
}
ROUTE_MANIFEST_END */
